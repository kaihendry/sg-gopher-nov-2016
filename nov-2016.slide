Using Golang to statically generate your Web site
Gophers Meetup #18 (November 2016)

19:00 3 November 2016
Tags: golang, html, static

Kai Hendry
hendry@iki.fi
hendry@spuul.com
http://hendry.iki.fi/
https://devops.spuul.com/
@kaihendry

* Why static HTML?

- [[https://twitter.com/slightlylate/status/789407395583700993]]
- S3 + Cloudfront === blazen fast
- Think the Google bot will grok your 5MB JS bundle?
- SEO
- ISOMORPHISM IS REALLY HARD (phantomJS is a joke, please)

* Golang HTML templates

.link https://golang.org/pkg/html/template/

- Fast
- Automatic contextual escaping

* How most 2016 production sites look like nowadays

- API serving JSON responses
- [[https://facebook.github.io/react/blog/2016/04/07/react-v15.html#major-changes][ReactJS]]

.code 2016-index.html

Lets throw in Golang to statify non-dynamic routes

* Tips

.image http://s.natalian.org/2016-11-02/404.png _ 500

- [[https://github.com/ikeikeikeike/go-sitemap-generator/][/sitemap.txt]]
- [[https://mholt.github.io/json-to-go/]]
- Design URL routes with trailing slashes to avoid costly redirects !

* Test

- [[https://github.com/addyosmani/psi][Page speed insights]]
- `time curl`
- httping
- [[https://github.com/davecheney/httpstat]]
- [[https://github.com/GoogleChrome/lighthouse/][lighthouse]] for [[https://cloudfour.com/thinks/progressive-web-apps-simply-make-sense/][PWA]]

* Code demos

.code templates/404/404.html

- HTML template includes
- [[https://github.com/kaihendry/blog]]
- [[https://github.com/kaihendry/lk/blob/master/main.go]]
- [[https://github.com/kaihendry/toc]]
